#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è RIT-Utils –Ω–∞ Ubuntu —Å–µ—Ä–≤–µ—Ä–µ

set -e

echo "üöÄ –ù–∞—á–∞–ª–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è RIT-Utils..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
check_requirements() {
    echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
    if ! command -v docker &> /dev/null; then
        echo "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
        curl -fsSL https://get.docker.com -o get-docker.sh
        sudo sh get-docker.sh
        sudo usermod -aG docker $USER
        rm get-docker.sh
        echo "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        echo "‚úÖ Docker –Ω–∞–π–¥–µ–Ω"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
    if ! command -v docker-compose &> /dev/null; then
        echo "‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∫–∞..."
        sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        echo "‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        echo "‚úÖ Docker Compose –Ω–∞–π–¥–µ–Ω"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ git
    if ! command -v git &> /dev/null; then
        echo "‚ùå Git –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∫–∞..."
        sudo apt update
        sudo apt install -y git
        echo "‚úÖ Git —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        echo "‚úÖ Git –Ω–∞–π–¥–µ–Ω"
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
setup_project() {
    echo "üìÅ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    mkdir -p nginx/logs
    mkdir -p nginx/ssl
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
    if [ ! -f .env ]; then
        echo "‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        if [ -f .env.examples ]; then
            echo "üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ .env.examples –≤ .env..."
            cp .env.examples .env
            echo "üîß –í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!"
            echo "nano .env"
            read -p "–ù–∞–∂–º–∏—Ç–µ Enter –∫–æ–≥–¥–∞ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç–µ .env..."
        else
            echo "‚ùå –§–∞–π–ª .env.examples –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            exit 1
        fi
    else
        echo "‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    missing_files=()
    
    if [ ! -f "src/utils/doctor_form/–ë–ª–∞–Ω–∫ –í—Ä–∞—á–∞.pptx" ]; then
        missing_files+=("src/utils/doctor_form/–ë–ª–∞–Ω–∫ –í—Ä–∞—á–∞.pptx")
    fi
    
    if [ ! -f "src/utils/gen_cert/–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç_—à–∞–±–ª–æ–Ω.pptx" ]; then
        missing_files+=("src/utils/gen_cert/–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç_—à–∞–±–ª–æ–Ω.pptx")
    fi
    
    if [ ! -f "src/utils/send_email/email_templates.py" ]; then
        missing_files+=("src/utils/send_email/email_templates.py")
    fi
    
    if [ ${#missing_files[@]} -gt 0 ]; then
        echo "‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã:"
        for file in "${missing_files[@]}"; do
            echo "   - $file"
        done
        echo "üîß –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ —Ñ–∞–π–ª—ã –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞"
        exit 1
    else
        echo "‚úÖ –í—Å–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã"
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ nginx
setup_nginx() {
    echo "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ nginx..."
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ IP –∞–¥—Ä–µ—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞
    SERVER_IP=$(curl -s ifconfig.me || curl -s ipinfo.io/ip || echo "YOUR_SERVER_IP")
    
    if [ "$SERVER_IP" != "YOUR_SERVER_IP" ]; then
        echo "üåç –û–±–Ω–∞—Ä—É–∂–µ–Ω IP —Å–µ—Ä–≤–µ—Ä–∞: $SERVER_IP"
        sed -i "s/YOUR_SERVER_IP/$SERVER_IP/g" nginx/conf.d/rit-utils.conf
        echo "‚úÖ IP –∞–¥—Ä–µ—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    else
        echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å IP —Å–µ—Ä–≤–µ—Ä–∞"
        echo "üîß –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ nginx/conf.d/rit-utils.conf –≤—Ä—É—á–Ω—É—é"
    fi
}

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
deploy() {
    echo "üèóÔ∏è  –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    docker-compose down 2>/dev/null || true
    
    # –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
    echo "üì¶ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
    docker-compose build --no-cache
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
    echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker-compose up -d
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    sleep 10
    echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
    docker-compose ps
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
    echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
    docker-compose logs --tail=20 app
    
    echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ nginx:"
    docker-compose logs --tail=10 nginx
}

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ—Å–ª–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
post_deploy_info() {
    echo ""
    echo "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    echo ""
    echo "üìç –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É:"
    
    SERVER_IP=$(curl -s ifconfig.me || curl -s ipinfo.io/ip || echo "YOUR_SERVER_IP")
    if [ "$SERVER_IP" != "YOUR_SERVER_IP" ]; then
        echo "   http://$SERVER_IP"
    else
        echo "   http://YOUR_SERVER_IP (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à IP)"
    fi
    
    echo ""
    echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "   –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:      docker-compose logs -f"
    echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞:           docker-compose down"
    echo "   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:          docker-compose restart"
    echo "   –°—Ç–∞—Ç—É—Å:              docker-compose ps"
    echo ""
    echo "üîê –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ HTTPS –∑–∞–ø—É—Å—Ç–∏—Ç–µ:"
    echo "   ./setup-https.sh"
    echo ""
    echo "‚ö†Ô∏è  –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ—Ä—Ç—ã 80 –∏ 443 –æ—Ç–∫—Ä—ã—Ç—ã –≤ –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä–µ!"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    check_requirements
    setup_project
    setup_nginx
    deploy
    post_deploy_info
}

# –ó–∞–ø—É—Å–∫
main "$@"
