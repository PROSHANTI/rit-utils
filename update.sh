#!/bin/bash

# üîÑ –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è RIT-Utils –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
error() { echo -e "${RED}‚ùå $1${NC}"; }

echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ RIT-Utils"
echo "======================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "docker-compose.yml" ] || [ ! -f "src/main.py" ]; then
    error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ rit-utils"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å git
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Git..."
if ! git status &>/dev/null; then
    error "–≠—Ç–æ –Ω–µ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏–ª–∏ Git –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    exit 1
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ–º–º–∏—Ç
current_commit=$(git rev-parse --short HEAD)
info "–¢–µ–∫—É—â–∏–π –∫–æ–º–º–∏—Ç: $current_commit"

# –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
info "–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏–∑ Git..."
git fetch origin

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
if git diff HEAD origin/main --quiet; then
    success "–ö–æ–¥ —É–∂–µ –∞–∫—Ç—É–∞–ª–µ–Ω, –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è"
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω—É–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ
    read -p "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ? [y/N]: " force_restart
    if [[ ! $force_restart =~ ^[Yy]$ ]]; then
        info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
        exit 0
    fi
else
    info "–ù–∞–π–¥–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –ø—Ä–∏–º–µ–Ω—è–µ–º..."
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
    echo ""
    info "–ò–∑–º–µ–Ω–µ–Ω–∏—è:"
    git log --oneline HEAD..origin/main
    echo ""
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    git pull origin main
    
    new_commit=$(git rev-parse --short HEAD)
    success "–û–±–Ω–æ–≤–ª–µ–Ω–æ –¥–æ –∫–æ–º–º–∏—Ç–∞: $new_commit"
fi

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
needs_rebuild=false

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–∞—Ö
if git diff HEAD~1 --name-only | grep -E "(Dockerfile|pyproject.toml|poetry.lock)" &>/dev/null; then
    warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö –∏–ª–∏ Dockerfile"
    needs_rebuild=true
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π
echo ""
info "–ü–ª–∞–Ω –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:"
if [ "$needs_rebuild" = true ]; then
    echo "  1. üèóÔ∏è  –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤ (–æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö)"
    echo "  2. üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤"
else
    echo "  1. üîÑ –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤"
fi
echo "  3. ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞"
echo ""

read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ? [Y/n]: " confirm
if [[ $confirm =~ ^[Nn]$ ]]; then
    warning "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
    exit 0
fi

# –í—ã–ø–æ–ª–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
echo ""
info "–ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."

if [ "$needs_rebuild" = true ]; then
    info "–ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
    docker-compose down
    docker-compose build --no-cache
    docker-compose up -d
else
    info "–ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫..."
    docker-compose restart
fi

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo ""
info "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
docker-compose ps

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo ""
info "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
docker-compose logs --tail=10 app

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
echo ""
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏..."

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
if grep -q "listen 443" nginx/conf.d/rit-utils.conf 2>/dev/null; then
    # HTTPS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    domain=$(grep "server_name" nginx/conf.d/rit-utils.conf | head -1 | awk '{print $2}' | sed 's/;//')
    check_url="https://$domain"
else
    # HTTP –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    check_url="http://localhost"
fi

if curl -s -f "$check_url" >/dev/null; then
    success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ: $check_url"
else
    warning "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
    echo ""
    info "–î–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "  docker-compose logs app"
    echo "  docker-compose ps"
fi

echo ""
success "üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
echo ""
info "–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  üìä –°—Ç–∞—Ç—É—Å:     docker-compose ps"
echo "  üìã –õ–æ–≥–∏:       docker-compose logs -f"
echo "  üîÑ –†–µ—Å—Ç–∞—Ä—Ç:    docker-compose restart"
echo "  ‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞:  docker-compose down"
